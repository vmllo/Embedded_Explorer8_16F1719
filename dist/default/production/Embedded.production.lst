

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Aug 06 19:35:59 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1719 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  0110                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011B                     	;# 
   121  011C                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  018E                     	;# 
   125  018F                     	;# 
   126  0190                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0197                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  020F                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  028C                     	;# 
   183  028D                     	;# 
   184  028E                     	;# 
   185  028F                     	;# 
   186  0290                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0293                     	;# 
   192  0298                     	;# 
   193  0298                     	;# 
   194  0299                     	;# 
   195  029A                     	;# 
   196  029A                     	;# 
   197  029E                     	;# 
   198  030C                     	;# 
   199  030D                     	;# 
   200  030E                     	;# 
   201  030F                     	;# 
   202  0310                     	;# 
   203  038C                     	;# 
   204  038D                     	;# 
   205  038E                     	;# 
   206  038F                     	;# 
   207  0390                     	;# 
   208  0391                     	;# 
   209  0392                     	;# 
   210  0393                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  0397                     	;# 
   215  0398                     	;# 
   216  0399                     	;# 
   217  039D                     	;# 
   218  039E                     	;# 
   219  039F                     	;# 
   220  0415                     	;# 
   221  0416                     	;# 
   222  0417                     	;# 
   223  041C                     	;# 
   224  041D                     	;# 
   225  041E                     	;# 
   226  0498                     	;# 
   227  0498                     	;# 
   228  0499                     	;# 
   229  049A                     	;# 
   230  049B                     	;# 
   231  049B                     	;# 
   232  049C                     	;# 
   233  049D                     	;# 
   234  049E                     	;# 
   235  049F                     	;# 
   236  0511                     	;# 
   237  0515                     	;# 
   238  0617                     	;# 
   239  0618                     	;# 
   240  0619                     	;# 
   241  0619                     	;# 
   242  061A                     	;# 
   243  061B                     	;# 
   244  061C                     	;# 
   245  061C                     	;# 
   246  0691                     	;# 
   247  0692                     	;# 
   248  0693                     	;# 
   249  0694                     	;# 
   250  0695                     	;# 
   251  0696                     	;# 
   252  0697                     	;# 
   253  0698                     	;# 
   254  0699                     	;# 
   255  069A                     	;# 
   256  069B                     	;# 
   257  069C                     	;# 
   258  069D                     	;# 
   259  069E                     	;# 
   260  069F                     	;# 
   261  0E0F                     	;# 
   262  0E10                     	;# 
   263  0E11                     	;# 
   264  0E12                     	;# 
   265  0E13                     	;# 
   266  0E14                     	;# 
   267  0E15                     	;# 
   268  0E17                     	;# 
   269  0E20                     	;# 
   270  0E21                     	;# 
   271  0E22                     	;# 
   272  0E24                     	;# 
   273  0E25                     	;# 
   274  0E28                     	;# 
   275  0E29                     	;# 
   276  0E2A                     	;# 
   277  0E2B                     	;# 
   278  0E90                     	;# 
   279  0E91                     	;# 
   280  0E92                     	;# 
   281  0E93                     	;# 
   282  0E94                     	;# 
   283  0E95                     	;# 
   284  0E96                     	;# 
   285  0E97                     	;# 
   286  0E98                     	;# 
   287  0E99                     	;# 
   288  0E9A                     	;# 
   289  0E9B                     	;# 
   290  0E9C                     	;# 
   291  0E9D                     	;# 
   292  0E9E                     	;# 
   293  0E9F                     	;# 
   294  0EA0                     	;# 
   295  0EA1                     	;# 
   296  0EA2                     	;# 
   297  0EA3                     	;# 
   298  0EA4                     	;# 
   299  0EA5                     	;# 
   300  0EA6                     	;# 
   301  0EA7                     	;# 
   302  0EA8                     	;# 
   303  0EA9                     	;# 
   304  0EAA                     	;# 
   305  0EAB                     	;# 
   306  0EAC                     	;# 
   307  0EAD                     	;# 
   308  0EAE                     	;# 
   309  0EAF                     	;# 
   310  0EB0                     	;# 
   311  0EB1                     	;# 
   312  0EB2                     	;# 
   313  0F0F                     	;# 
   314  0F10                     	;# 
   315  0F11                     	;# 
   316  0F12                     	;# 
   317  0F13                     	;# 
   318  0F14                     	;# 
   319  0F15                     	;# 
   320  0F16                     	;# 
   321  0F17                     	;# 
   322  0F18                     	;# 
   323  0F19                     	;# 
   324  0F1A                     	;# 
   325  0F1B                     	;# 
   326  0F1C                     	;# 
   327  0F1D                     	;# 
   328  0F1E                     	;# 
   329  0F1F                     	;# 
   330  0F20                     	;# 
   331  0F21                     	;# 
   332  0F22                     	;# 
   333  0F23                     	;# 
   334  0F24                     	;# 
   335  0F25                     	;# 
   336  0F26                     	;# 
   337  0F27                     	;# 
   338  0F28                     	;# 
   339  0F29                     	;# 
   340  0F2A                     	;# 
   341  0F2B                     	;# 
   342  0F2C                     	;# 
   343  0F2D                     	;# 
   344  0F2E                     	;# 
   345  0F2F                     	;# 
   346  0F30                     	;# 
   347  0F31                     	;# 
   348  0F32                     	;# 
   349  0F33                     	;# 
   350  0F34                     	;# 
   351  0F35                     	;# 
   352  0F36                     	;# 
   353  0F37                     	;# 
   354  0FE4                     	;# 
   355  0FE5                     	;# 
   356  0FE6                     	;# 
   357  0FE7                     	;# 
   358  0FE8                     	;# 
   359  0FE9                     	;# 
   360  0FEA                     	;# 
   361  0FEB                     	;# 
   362  0FED                     	;# 
   363  0FEE                     	;# 
   364  0FEF                     	;# 
   365                           
   366                           	psect	stringtext1
   367  0800                     __pstringtext1:
   368  0800                     STR_1:
   369  0800  3470               	retlw	112	;'p'
   370  0801  3461               	retlw	97	;'a'
   371  0802  3473               	retlw	115	;'s'
   372  0803  3473               	retlw	115	;'s'
   373  0804  3400               	retlw	0
   374                           
   375                           	psect	stringtext2
   376  0000                     __pstringtext2:
   377                           
   378                           	psect	cinit
   379  07F5                     start_initialization:	
   380                           ; #config settings
   381                           
   382  07F5                     __initialization:
   383                           
   384                           ; Clear objects allocated to BANK0
   385  07F5  3020               	movlw	low __pbssBANK0
   386  07F6  0084               	movwf	4
   387  07F7  3000               	movlw	high __pbssBANK0
   388  07F8  0085               	movwf	5
   389  07F9  3028               	movlw	40
   390  07FA  3186  267C  3187   	fcall	clear_ram0
   391  07FD                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  07FD                     __end_of__initialization:
   395  07FD  0020               	movlb	0
   396  07FE  3186  2EBC         	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssBANK0
   399  0020                     __pbssBANK0:
   400  0020                     _dbuf:
   401  0020                     	ds	32
   402  0040                     _nout:
   403  0040                     	ds	2
   404  0042                     _width:
   405  0042                     	ds	2
   406  0044                     _prec:
   407  0044                     	ds	2
   408  0046                     _flags:
   409  0046                     	ds	2
   410                           
   411                           	psect	clrtext
   412  067C                     clear_ram0:	
   413                           ;	Called with FSR0 containing the base address, and
   414                           ;	WREG with the size to clear
   415                           
   416  067C  0064               	clrwdt	;clear the watchdog before getting into this loop
   417  067D                     clrloop0:
   418  067D  0180               	clrf	0	;clear RAM location pointed to by FSR
   419  067E  3101               	addfsr 0,1
   420  067F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   421  0680  2E7D               	goto	clrloop0	;have we reached the end yet?
   422  0681  3400               	retlw	0	;all done for this memory range, return
   423                           
   424                           	psect	cstackCOMMON
   425  0070                     __pcstackCOMMON:
   426  0070                     ?_putch:
   427  0070                     ??_putch:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_main:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_fputc:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_testPort:	
   437                           ; 2 bytes @ 0x0
   438                           
   439  0070                     putch@c:	
   440                           ; 2 bytes @ 0x0
   441                           
   442  0070                     testPort@trisPort:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     fputc@c:	
   446                           ; 2 bytes @ 0x0
   447                           
   448                           
   449                           ; 2 bytes @ 0x0
   450  0070                     	ds	2
   451  0072                     fputc@fp:
   452  0072                     testPort@Port:	
   453                           ; 1 bytes @ 0x2
   454                           
   455                           
   456                           ; 2 bytes @ 0x2
   457  0072                     	ds	1
   458  0073                     ??_fputc:
   459                           
   460                           ; 1 bytes @ 0x3
   461  0073                     	ds	1
   462  0074                     testPort@direction:
   463                           
   464                           ; 2 bytes @ 0x4
   465  0074                     	ds	2
   466  0076                     testPort@direction2:
   467                           
   468                           ; 2 bytes @ 0x6
   469  0076                     	ds	2
   470  0078                     ?_vfpfcnvrt:
   471  0078                     vfpfcnvrt@fmt:	
   472                           ; 2 bytes @ 0x8
   473                           
   474  0078                     testPort@counter:	
   475                           ; 1 bytes @ 0x8
   476                           
   477                           
   478                           ; 2 bytes @ 0x8
   479  0078                     	ds	1
   480  0079                     vfpfcnvrt@ap:
   481                           
   482                           ; 1 bytes @ 0x9
   483  0079                     	ds	1
   484  007A                     ??_testPort:
   485  007A                     vfpfcnvrt@fp:	
   486                           ; 1 bytes @ 0xA
   487                           
   488                           
   489                           ; 1 bytes @ 0xA
   490  007A                     	ds	1
   491  007B                     ?_vfprintf:
   492  007B                     testPort@i:	
   493                           ; 2 bytes @ 0xB
   494                           
   495  007B                     vfprintf@fmt:	
   496                           ; 2 bytes @ 0xB
   497                           
   498                           
   499                           ; 2 bytes @ 0xB
   500  007B                     	ds	2
   501  007D                     vfprintf@ap:
   502                           
   503                           ; 1 bytes @ 0xD
   504  007D                     	ds	1
   505  007E                     ??_main:
   506                           
   507                           	psect	cstackBANK0
   508  0048                     __pcstackBANK0:	
   509                           ; 1 bytes @ 0xE
   510                           
   511  0048                     ??_vfpfcnvrt:
   512                           
   513                           ; 1 bytes @ 0x0
   514  0048                     	ds	5
   515  004D                     ??_vfprintf:
   516                           
   517                           ; 1 bytes @ 0x5
   518  004D                     	ds	2
   519  004F                     vfprintf@fp:
   520                           
   521                           ; 1 bytes @ 0x7
   522  004F                     	ds	1
   523  0050                     vfprintf@cfmt:
   524                           
   525                           ; 2 bytes @ 0x8
   526  0050                     	ds	2
   527  0052                     ?_printf:
   528  0052                     printf@fmt:	
   529                           ; 2 bytes @ 0xA
   530                           
   531                           
   532                           ; 2 bytes @ 0xA
   533  0052                     	ds	2
   534  0054                     ??_printf:
   535                           
   536                           ; 1 bytes @ 0xC
   537  0054                     	ds	1
   538  0055                     printf@ap:
   539                           
   540                           ; 1 bytes @ 0xD
   541  0055                     	ds	1
   542                           
   543                           	psect	maintext
   544  06BC                     __pmaintext:	
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 26 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : B1F/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called: 5
   570 ;; This function calls:
   571 ;;		_printf
   572 ;;		_testPort
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _main
   580  06BC                     _main:
   581  06BC                     l779:	
   582                           ;incstack = 0
   583                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   584                           
   585                           
   586                           ;main.c: 27:     if(testPort(0x8F,0x0F,0,1,0b0001)){
   587  06BC  308F               	movlw	143
   588  06BD  00F0               	movwf	testPort@trisPort
   589  06BE  3000               	movlw	0
   590  06BF  00F1               	movwf	testPort@trisPort+1
   591  06C0  300F               	movlw	15
   592  06C1  00F2               	movwf	testPort@Port
   593  06C2  3000               	movlw	0
   594  06C3  00F3               	movwf	testPort@Port+1
   595  06C4  3000               	movlw	0
   596  06C5  00F4               	movwf	testPort@direction
   597  06C6  00F5               	movwf	testPort@direction+1
   598  06C7  3001               	movlw	1
   599  06C8  00F6               	movwf	testPort@direction2
   600  06C9  3000               	movlw	0
   601  06CA  00F7               	movwf	testPort@direction2+1
   602  06CB  3001               	movlw	1
   603  06CC  00F8               	movwf	testPort@counter
   604  06CD  3000               	movlw	0
   605  06CE  00F9               	movwf	testPort@counter+1
   606  06CF  3187  2736  3186   	fcall	_testPort
   607  06D2  0870               	movf	?_testPort,w
   608  06D3  0471               	iorwf	?_testPort+1,w
   609  06D4  1903               	btfsc	3,2
   610  06D5  2ED7               	goto	u201
   611  06D6  2ED8               	goto	u200
   612  06D7                     u201:
   613  06D7  2EE0               	goto	l783
   614  06D8                     u200:
   615  06D8                     l781:
   616                           
   617                           ;main.c: 28:         printf("pass");
   618  06D8  3000               	movlw	low (STR_1| (0+32768))
   619  06D9  0020               	movlb	0	; select bank0
   620  06DA  00D2               	movwf	printf@fmt
   621  06DB  3088               	movlw	high (STR_1| (0+32768))
   622  06DC  00D3               	movwf	printf@fmt+1
   623  06DD  3186  2682  3186   	fcall	_printf
   624  06E0                     l783:
   625                           
   626                           ;main.c: 30:     testPort(0x8F,0x0F,0,0,0x80);
   627  06E0  308F               	movlw	143
   628  06E1  00F0               	movwf	testPort@trisPort
   629  06E2  3000               	movlw	0
   630  06E3  00F1               	movwf	testPort@trisPort+1
   631  06E4  300F               	movlw	15
   632  06E5  00F2               	movwf	testPort@Port
   633  06E6  3000               	movlw	0
   634  06E7  00F3               	movwf	testPort@Port+1
   635  06E8  3000               	movlw	0
   636  06E9  00F4               	movwf	testPort@direction
   637  06EA  00F5               	movwf	testPort@direction+1
   638  06EB  3000               	movlw	0
   639  06EC  00F6               	movwf	testPort@direction2
   640  06ED  00F7               	movwf	testPort@direction2+1
   641  06EE  3080               	movlw	128
   642  06EF  00F8               	movwf	testPort@counter
   643  06F0  3000               	movlw	0
   644  06F1  00F9               	movwf	testPort@counter+1
   645  06F2  3187  2736  3186   	fcall	_testPort
   646  06F5                     l16:
   647  06F5  3180  2802         	ljmp	start
   648  06F7                     __end_of_main:
   649                           
   650                           	psect	text1
   651  0736                     __ptext1:	
   652 ;; *************** function _testPort *****************
   653 ;; Defined at:
   654 ;;		line 9 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  trisPort        2    0[COMMON] PTR int 
   657 ;;		 -> RAM(4096), 
   658 ;;  Port            2    2[COMMON] PTR int 
   659 ;;		 -> RAM(4096), 
   660 ;;  direction       2    4[COMMON] int 
   661 ;;  direction2      2    6[COMMON] int 
   662 ;;  counter         2    8[COMMON] int 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  i               2   11[COMMON] int 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  2    0[COMMON] int 
   667 ;; Registers used:
   668 ;;		wreg, fsr1l, fsr1h, status,2
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   674 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   677 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:       13 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _testPort
   689  0736                     _testPort:
   690  0736                     l759:	
   691                           ;incstack = 0
   692                           ; Regs used in _testPort: [wreg+fsr1l+fsr1h+status,2]
   693                           
   694                           
   695                           ;main.c: 10:     *trisPort = direction;
   696  0736  0870               	movf	testPort@trisPort,w
   697  0737  0086               	movwf	6
   698  0738  0871               	movf	testPort@trisPort+1,w
   699  0739  0087               	movwf	7
   700  073A  0874               	movf	testPort@direction,w
   701  073B  3FC0               	movwi [0]fsr1
   702  073C  0875               	movf	testPort@direction+1,w
   703  073D  3FC1               	movwi [1]fsr1
   704                           
   705                           ;main.c: 11:     *Port = direction2;
   706  073E  0872               	movf	testPort@Port,w
   707  073F  0086               	movwf	6
   708  0740  0873               	movf	testPort@Port+1,w
   709  0741  0087               	movwf	7
   710  0742  0876               	movf	testPort@direction2,w
   711  0743  3FC0               	movwi [0]fsr1
   712  0744  0877               	movf	testPort@direction2+1,w
   713  0745  3FC1               	movwi [1]fsr1
   714  0746                     l761:
   715                           
   716                           ;main.c: 14:     int i = 0;
   717  0746  01FB               	clrf	testPort@i
   718  0747  01FC               	clrf	testPort@i+1
   719                           
   720                           ;main.c: 15:     while(i <= 5){
   721  0748  2F69               	goto	l7
   722  0749                     l763:
   723                           
   724                           ;main.c: 17:         *Port = counter;
   725  0749  0872               	movf	testPort@Port,w
   726  074A  0086               	movwf	6
   727  074B  0873               	movf	testPort@Port+1,w
   728  074C  0087               	movwf	7
   729  074D  0878               	movf	testPort@counter,w
   730  074E  3FC0               	movwi [0]fsr1
   731  074F  0879               	movf	testPort@counter+1,w
   732  0750  3FC1               	movwi [1]fsr1
   733  0751                     l765:
   734                           
   735                           ;main.c: 19:         _delay(50000);
   736  0751  3041               	movlw	65
   737  0752  00FA               	movwf	??_testPort
   738  0753  30EE               	movlw	238
   739  0754                     u217:
   740  0754  0B89               	decfsz	9,f
   741  0755  2F54               	goto	u217
   742  0756  0BFA               	decfsz	??_testPort,f
   743  0757  2F54               	goto	u217
   744  0758  3200               	nop2
   745  0759                     l767:
   746                           
   747                           ;main.c: 20:         *Port = 0;
   748  0759  0872               	movf	testPort@Port,w
   749  075A  0086               	movwf	6
   750  075B  0873               	movf	testPort@Port+1,w
   751  075C  0087               	movwf	7
   752  075D  3000               	movlw	0
   753  075E  3FC0               	movwi [0]fsr1
   754  075F  3FC1               	movwi [1]fsr1
   755                           
   756                           ;main.c: 21:         counter <<= 1;
   757  0760  3001               	movlw	1
   758  0761                     u185:
   759  0761  35F8               	lslf	testPort@counter,f
   760  0762  0DF9               	rlf	testPort@counter+1,f
   761  0763  0B89               	decfsz	9,f
   762  0764  2F61               	goto	u185
   763                           
   764                           ;main.c: 22:         i++;
   765  0765  3001               	movlw	1
   766  0766  07FB               	addwf	testPort@i,f
   767  0767  3000               	movlw	0
   768  0768  3DFC               	addwfc	testPort@i+1,f
   769  0769                     l7:	
   770                           ;main.c: 23:     }
   771                           
   772                           
   773                           ;main.c: 15:     while(i <= 5){
   774  0769  087C               	movf	testPort@i+1,w
   775  076A  3A80               	xorlw	128
   776  076B  00FA               	movwf	??_testPort
   777  076C  3080               	movlw	128
   778  076D  027A               	subwf	??_testPort,w
   779  076E  1D03               	skipz
   780  076F  2F72               	goto	u195
   781  0770  3006               	movlw	6
   782  0771  027B               	subwf	testPort@i,w
   783  0772                     u195:
   784  0772  1C03               	skipc
   785  0773  2F75               	goto	u191
   786  0774  2F76               	goto	u190
   787  0775                     u191:
   788  0775  2F49               	goto	l763
   789  0776                     u190:
   790  0776                     l769:
   791                           
   792                           ;main.c: 24:     return 1;
   793  0776  3001               	movlw	1
   794  0777  00F0               	movwf	?_testPort
   795  0778  3000               	movlw	0
   796  0779  00F1               	movwf	?_testPort+1
   797  077A                     l10:
   798  077A  0008               	return
   799  077B                     __end_of_testPort:
   800                           
   801                           	psect	text2
   802  0682                     __ptext2:	
   803 ;; *************** function _printf *****************
   804 ;; Defined at:
   805 ;;		line 5 in file "C:\Compiler\Microchip\pic\sources\c99\common\printf.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
   808 ;;		 -> STR_1(5), 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  ret             2    0        int 
   811 ;;  ap              1   13[BANK0 ] PTR void [1]
   812 ;;		 -> ?_printf(2), 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2   10[BANK0 ] int 
   815 ;; Registers used:
   816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   825 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   826 ;;Total ram usage:        4 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 4
   829 ;; This function calls:
   830 ;;		_vfprintf
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _printf
   838  0682                     _printf:
   839  0682                     l773:	
   840                           ;incstack = 0
   841                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   842                           
   843  0682  3054               	movlw	(low ((?_printf| 0+2)))& (0+255)
   844  0683  0020               	movlb	0	; select bank0
   845  0684  00D4               	movwf	??_printf
   846  0685  0854               	movf	??_printf,w
   847  0686  00D5               	movwf	printf@ap
   848  0687                     l775:
   849  0687  0853               	movf	printf@fmt+1,w
   850  0688  00FC               	movwf	vfprintf@fmt+1
   851  0689  0852               	movf	printf@fmt,w
   852  068A  00FB               	movwf	vfprintf@fmt
   853  068B  3055               	movlw	(low (printf@ap| 0))& (0+255)
   854  068C  00D4               	movwf	??_printf
   855  068D  0854               	movf	??_printf,w
   856  068E  00FD               	movwf	vfprintf@ap
   857  068F  3000               	movlw	0
   858  0690  3186  2694  3186   	fcall	_vfprintf
   859  0693                     l547:
   860  0693  0008               	return
   861  0694                     __end_of_printf:
   862                           
   863                           	psect	text3
   864  0694                     __ptext3:	
   865 ;; *************** function _vfprintf *****************
   866 ;; Defined at:
   867 ;;		line 1390 in file "C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  fp              1    wreg     PTR struct _IO_FILE
   870 ;;		 -> NULL(0), 
   871 ;;  fmt             2   11[COMMON] PTR const unsigned char 
   872 ;;		 -> STR_1(5), 
   873 ;;  ap              1   13[COMMON] PTR PTR void 
   874 ;;		 -> printf@ap(1), 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
   877 ;;		 -> NULL(0), 
   878 ;;  cfmt            2    8[BANK0 ] PTR unsigned char 
   879 ;;		 -> STR_1(5), 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  2   11[COMMON] int 
   882 ;; Registers used:
   883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   889 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   890 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   892 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   893 ;;Total ram usage:        8 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 3
   896 ;; This function calls:
   897 ;;		_vfpfcnvrt
   898 ;; This function is called by:
   899 ;;		_printf
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _vfprintf
   905  0694                     _vfprintf:
   906                           
   907                           ;incstack = 0
   908                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   909                           ;vfprintf@fp stored from wreg
   910  0694  0020               	movlb	0	; select bank0
   911  0695  00CF               	movwf	vfprintf@fp
   912  0696                     l747:
   913                           
   914                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FILE *fp, con
      +                          st char *fmt, va_list ap);C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1391: {
      +                          ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1393:     char *cfmt;;C:\Compile
      +                          r\Microchip\pic\sources\c99\common\doprnt.c: 1395:     cfmt = (char *)fmt;
   915  0696  087C               	movf	vfprintf@fmt+1,w
   916  0697  00D1               	movwf	vfprintf@cfmt+1
   917  0698  087B               	movf	vfprintf@fmt,w
   918  0699  00D0               	movwf	vfprintf@cfmt
   919  069A                     l749:
   920                           
   921                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
   922  069A  01C0               	clrf	_nout
   923  069B  01C1               	clrf	_nout+1
   924                           
   925                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
   926  069C  2EAE               	goto	l753
   927  069D                     l751:
   928                           
   929                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1398:         nout += vfpfcnvrt(
      +                          fp, &cfmt, ap);
   930  069D  3050               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
   931  069E  00CD               	movwf	??_vfprintf
   932  069F  084D               	movf	??_vfprintf,w
   933  06A0  00F8               	movwf	vfpfcnvrt@fmt
   934  06A1  087D               	movf	vfprintf@ap,w
   935  06A2  00CE               	movwf	??_vfprintf+1
   936  06A3  084E               	movf	??_vfprintf+1,w
   937  06A4  00F9               	movwf	vfpfcnvrt@ap
   938  06A5  084F               	movf	vfprintf@fp,w
   939  06A6  3187  277B  3186   	fcall	_vfpfcnvrt
   940  06A9  0878               	movf	?_vfpfcnvrt,w
   941  06AA  0020               	movlb	0	; select bank0
   942  06AB  07C0               	addwf	_nout,f
   943  06AC  0879               	movf	?_vfpfcnvrt+1,w
   944  06AD  3DC1               	addwfc	_nout+1,f
   945  06AE                     l753:
   946                           
   947                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
   948  06AE  0850               	movf	vfprintf@cfmt,w
   949  06AF  0084               	movwf	4
   950  06B0  0851               	movf	vfprintf@cfmt+1,w
   951  06B1  0085               	movwf	5
   952  06B2  0012               	moviw fsr0++
   953  06B3  1D03               	btfss	3,2
   954  06B4  2EB6               	goto	u171
   955  06B5  2EB7               	goto	u170
   956  06B6                     u171:
   957  06B6  2E9D               	goto	l751
   958  06B7                     u170:
   959  06B7                     l755:
   960                           
   961                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1400:     return nout;
   962  06B7  0841               	movf	_nout+1,w
   963  06B8  00FC               	movwf	?_vfprintf+1
   964  06B9  0840               	movf	_nout,w
   965  06BA  00FB               	movwf	?_vfprintf
   966  06BB                     l586:
   967  06BB  0008               	return
   968  06BC                     __end_of_vfprintf:
   969                           
   970                           	psect	text4
   971  077B                     __ptext4:	
   972 ;; *************** function _vfpfcnvrt *****************
   973 ;; Defined at:
   974 ;;		line 692 in file "C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  fp              1    wreg     PTR struct _IO_FILE
   977 ;;		 -> NULL(0), 
   978 ;;  fmt             1    8[COMMON] PTR PTR unsigned char 
   979 ;;		 -> vfprintf@cfmt(2), 
   980 ;;  ap              1    9[COMMON] PTR PTR void 
   981 ;;		 -> printf@ap(1), 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
   984 ;;		 -> NULL(0), 
   985 ;;  llu             8    0        unsigned long long 
   986 ;;  ll              8    0        long long 
   987 ;;  f               4    0        long long 
   988 ;;  ct              3    0        unsigned char [3]
   989 ;;  vp              2    0        PTR void 
   990 ;;  i               2    0        int 
   991 ;;  done            2    0        int 
   992 ;;  cp              2    0        PTR unsigned char 
   993 ;;  c               1    0        unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  2    8[COMMON] int 
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1005 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1006 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1007 ;;Total ram usage:        8 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; Hardware stack levels required when called: 2
  1010 ;; This function calls:
  1011 ;;		_fputc
  1012 ;; This function is called by:
  1013 ;;		_vfprintf
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _vfpfcnvrt
  1019  077B                     _vfpfcnvrt:
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1023                           ;vfpfcnvrt@fp stored from wreg
  1024  077B  00FA               	movwf	vfpfcnvrt@fp
  1025  077C                     l715:
  1026                           
  1027                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 692: static int vfpfcnvrt(FILE *
      +                          fp, char *fmt[], va_list ap);C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 693:
      +                           {;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 694:     char c, *cp, ct[3];;C
      +                          :\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 695:     int done, i;;C:\Compiler\
      +                          Microchip\pic\sources\c99\common\doprnt.c: 696:     long long ll;;C:\Compiler\Microchip\
      +                          pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;;C:\Compiler\Microchip\
      +                          pic\sources\c99\common\doprnt.c: 698:     long double f;
  1028  077C  0878               	movf	vfpfcnvrt@fmt,w
  1029  077D  0086               	movwf	6
  1030  077E  0187               	clrf	7
  1031  077F  3F40               	moviw [0]fsr1
  1032  0780  0020               	movlb	0	; select bank0
  1033  0781  00C8               	movwf	??_vfpfcnvrt
  1034  0782  3F41               	moviw [1]fsr1
  1035  0783  00C9               	movwf	??_vfpfcnvrt+1
  1036  0784  0848               	movf	??_vfpfcnvrt,w
  1037  0785  0084               	movwf	4
  1038  0786  0849               	movf	??_vfpfcnvrt+1,w
  1039  0787  0085               	movwf	5
  1040  0788  0012               	moviw fsr0++
  1041  0789  3A25               	xorlw	37
  1042  078A  1D03               	btfss	3,2
  1043  078B  2F8D               	goto	u151
  1044  078C  2F8E               	goto	u150
  1045  078D                     u151:
  1046  078D  2FD2               	goto	l739
  1047  078E                     u150:
  1048  078E                     l717:
  1049                           
  1050                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  1051  078E  0878               	movf	vfpfcnvrt@fmt,w
  1052  078F  0086               	movwf	6
  1053  0790  0187               	clrf	7
  1054  0791  3001               	movlw	1
  1055  0792  0781               	addwf	1,f
  1056  0793  3141               	addfsr 1,1
  1057  0794  1803               	skipnc
  1058  0795  0A81               	incf	1,f
  1059  0796                     l719:
  1060                           
  1061                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 705:         flags = width = 0;
  1062  0796  01C2               	clrf	_width
  1063  0797  01C3               	clrf	_width+1
  1064  0798  01C6               	clrf	_flags
  1065  0799  01C7               	clrf	_flags+1
  1066  079A                     l721:
  1067                           
  1068                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 706:         prec = -1;
  1069  079A  30FF               	movlw	255
  1070  079B  00C4               	movwf	_prec
  1071  079C  30FF               	movlw	255
  1072  079D  00C5               	movwf	_prec+1
  1073  079E                     l723:
  1074                           
  1075                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1372:         if ((*fmt)[0] == '
      +                          %') {
  1076  079E  0878               	movf	vfpfcnvrt@fmt,w
  1077  079F  0086               	movwf	6
  1078  07A0  0187               	clrf	7
  1079  07A1  3F40               	moviw [0]fsr1
  1080  07A2  00C8               	movwf	??_vfpfcnvrt
  1081  07A3  3F41               	moviw [1]fsr1
  1082  07A4  00C9               	movwf	??_vfpfcnvrt+1
  1083  07A5  0848               	movf	??_vfpfcnvrt,w
  1084  07A6  0084               	movwf	4
  1085  07A7  0849               	movf	??_vfpfcnvrt+1,w
  1086  07A8  0085               	movwf	5
  1087  07A9  0012               	moviw fsr0++
  1088  07AA  3A25               	xorlw	37
  1089  07AB  1D03               	btfss	3,2
  1090  07AC  2FAE               	goto	u161
  1091  07AD  2FAF               	goto	u160
  1092  07AE                     u161:
  1093  07AE  2FC7               	goto	l733
  1094  07AF                     u160:
  1095  07AF                     l725:
  1096                           
  1097                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1373:             ++*fmt;
  1098  07AF  0878               	movf	vfpfcnvrt@fmt,w
  1099  07B0  0086               	movwf	6
  1100  07B1  0187               	clrf	7
  1101  07B2  3001               	movlw	1
  1102  07B3  0781               	addwf	1,f
  1103  07B4  3141               	addfsr 1,1
  1104  07B5  1803               	skipnc
  1105  07B6  0A81               	incf	1,f
  1106  07B7                     l727:
  1107                           
  1108                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1374:             fputc((int)'%'
      +                          , fp);
  1109  07B7  3025               	movlw	37
  1110  07B8  00F0               	movwf	fputc@c
  1111  07B9  3000               	movlw	0
  1112  07BA  00F1               	movwf	fputc@c+1
  1113  07BB  087A               	movf	vfpfcnvrt@fp,w
  1114  07BC  00C8               	movwf	??_vfpfcnvrt
  1115  07BD  0848               	movf	??_vfpfcnvrt,w
  1116  07BE  00F2               	movwf	fputc@fp
  1117  07BF  3186  26F7  3187   	fcall	_fputc
  1118  07C2                     l729:
  1119                           
  1120                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1375:             return 1;
  1121  07C2  3001               	movlw	1
  1122  07C3  00F8               	movwf	?_vfpfcnvrt
  1123  07C4  3000               	movlw	0
  1124  07C5  00F9               	movwf	?_vfpfcnvrt+1
  1125  07C6  2FF4               	goto	l580
  1126  07C7                     l733:
  1127                           
  1128                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  1129  07C7  0878               	movf	vfpfcnvrt@fmt,w
  1130  07C8  0086               	movwf	6
  1131  07C9  0187               	clrf	7
  1132  07CA  3001               	movlw	1
  1133  07CB  0781               	addwf	1,f
  1134  07CC  3141               	addfsr 1,1
  1135  07CD  1803               	skipnc
  1136  07CE  0A81               	incf	1,f
  1137  07CF                     l735:
  1138                           
  1139                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1380:         return 0;
  1140  07CF  01F8               	clrf	?_vfpfcnvrt
  1141  07D0  01F9               	clrf	?_vfpfcnvrt+1
  1142  07D1  2FF4               	goto	l580
  1143  07D2                     l739:
  1144                           
  1145                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(*fmt)[0], 
      +                          fp);
  1146  07D2  0878               	movf	vfpfcnvrt@fmt,w
  1147  07D3  0086               	movwf	6
  1148  07D4  0187               	clrf	7
  1149  07D5  3F40               	moviw [0]fsr1
  1150  07D6  00C8               	movwf	??_vfpfcnvrt
  1151  07D7  3F41               	moviw [1]fsr1
  1152  07D8  00C9               	movwf	??_vfpfcnvrt+1
  1153  07D9  0848               	movf	??_vfpfcnvrt,w
  1154  07DA  0084               	movwf	4
  1155  07DB  0849               	movf	??_vfpfcnvrt+1,w
  1156  07DC  0085               	movwf	5
  1157  07DD  0800               	movf	0,w	;code access
  1158  07DE  00CA               	movwf	??_vfpfcnvrt+2
  1159  07DF  01CB               	clrf	??_vfpfcnvrt+3
  1160  07E0  084A               	movf	??_vfpfcnvrt+2,w
  1161  07E1  00F0               	movwf	fputc@c
  1162  07E2  084B               	movf	??_vfpfcnvrt+3,w
  1163  07E3  00F1               	movwf	fputc@c+1
  1164  07E4  087A               	movf	vfpfcnvrt@fp,w
  1165  07E5  00CC               	movwf	??_vfpfcnvrt+4
  1166  07E6  084C               	movf	??_vfpfcnvrt+4,w
  1167  07E7  00F2               	movwf	fputc@fp
  1168  07E8  3186  26F7  3187   	fcall	_fputc
  1169  07EB                     l741:
  1170                           
  1171                           ;C:\Compiler\Microchip\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1172  07EB  0878               	movf	vfpfcnvrt@fmt,w
  1173  07EC  0086               	movwf	6
  1174  07ED  0187               	clrf	7
  1175  07EE  3001               	movlw	1
  1176  07EF  0781               	addwf	1,f
  1177  07F0  3141               	addfsr 1,1
  1178  07F1  1803               	skipnc
  1179  07F2  0A81               	incf	1,f
  1180  07F3  2FC2               	goto	l729
  1181  07F4                     l580:
  1182  07F4  0008               	return
  1183  07F5                     __end_of_vfpfcnvrt:
  1184                           
  1185                           	psect	text5
  1186  06F7                     __ptext5:	
  1187 ;; *************** function _fputc *****************
  1188 ;; Defined at:
  1189 ;;		line 8 in file "C:\Compiler\Microchip\pic\sources\c99\common\nf_fputc.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  c               2    0[COMMON] int 
  1192 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  1193 ;;		 -> NULL(0), 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2    0[COMMON] int 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1205 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1207 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1208 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1209 ;;Total ram usage:        8 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; Hardware stack levels required when called: 1
  1212 ;; This function calls:
  1213 ;;		_putch
  1214 ;; This function is called by:
  1215 ;;		_vfpfcnvrt
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function _fputc
  1221  06F7                     _fputc:
  1222  06F7                     l701:	
  1223                           ;incstack = 0
  1224                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1225                           
  1226  06F7  0872               	movf	fputc@fp,w
  1227  06F8  1903               	btfsc	3,2
  1228  06F9  2EFB               	goto	u111
  1229  06FA  2EFC               	goto	u110
  1230  06FB                     u111:
  1231  06FB  2F01               	goto	l705
  1232  06FC                     u110:
  1233  06FC                     l703:
  1234  06FC  0872               	movf	fputc@fp,w
  1235  06FD  1D03               	btfss	3,2
  1236  06FE  2F00               	goto	u121
  1237  06FF  2F01               	goto	u120
  1238  0700                     u121:
  1239  0700  2F06               	goto	l707
  1240  0701                     u120:
  1241  0701                     l705:
  1242  0701  0870               	movf	fputc@c,w
  1243  0702  3186  267B  3186   	fcall	_putch
  1244  0705  2F35               	goto	l598
  1245  0706                     l707:
  1246  0706  0872               	movf	fputc@fp,w
  1247  0707  3E03               	addlw	3
  1248  0708  0086               	movwf	6
  1249  0709  0187               	clrf	7
  1250  070A  0016               	moviw fsr1++
  1251  070B  0401               	iorwf	1,w
  1252  070C  1903               	btfsc	3,2
  1253  070D  2F0F               	goto	u131
  1254  070E  2F10               	goto	u130
  1255  070F                     u131:
  1256  070F  2F2D               	goto	l711
  1257  0710                     u130:
  1258  0710                     l709:
  1259  0710  0872               	movf	fputc@fp,w
  1260  0711  3E03               	addlw	3
  1261  0712  0086               	movwf	6
  1262  0713  0187               	clrf	7
  1263  0714  3F40               	moviw [0]fsr1
  1264  0715  00F3               	movwf	??_fputc
  1265  0716  3F41               	moviw [1]fsr1
  1266  0717  00F4               	movwf	??_fputc+1
  1267  0718  0A72               	incf	fputc@fp,w
  1268  0719  0086               	movwf	6
  1269  071A  0187               	clrf	7
  1270  071B  3F40               	moviw [0]fsr1
  1271  071C  00F5               	movwf	??_fputc+2
  1272  071D  3F41               	moviw [1]fsr1
  1273  071E  00F6               	movwf	??_fputc+3
  1274  071F  0876               	movf	??_fputc+3,w
  1275  0720  3A80               	xorlw	128
  1276  0721  00F7               	movwf	??_fputc+4
  1277  0722  0874               	movf	??_fputc+1,w
  1278  0723  3A80               	xorlw	128
  1279  0724  0277               	subwf	??_fputc+4,w
  1280  0725  1D03               	skipz
  1281  0726  2F29               	goto	u145
  1282  0727  0873               	movf	??_fputc,w
  1283  0728  0275               	subwf	??_fputc+2,w
  1284  0729                     u145:
  1285  0729  1803               	skipnc
  1286  072A  2F2C               	goto	u141
  1287  072B  2F2D               	goto	u140
  1288  072C                     u141:
  1289  072C  2F35               	goto	l598
  1290  072D                     u140:
  1291  072D                     l711:
  1292  072D  0A72               	incf	fputc@fp,w
  1293  072E  0086               	movwf	6
  1294  072F  0187               	clrf	7
  1295  0730  3001               	movlw	1
  1296  0731  0781               	addwf	1,f
  1297  0732  3141               	addfsr 1,1
  1298  0733  1803               	skipnc
  1299  0734  0A81               	incf	1,f
  1300  0735                     l598:
  1301  0735  0008               	return
  1302  0736                     __end_of_fputc:
  1303                           
  1304                           	psect	text6
  1305  067B                     __ptext6:	
  1306 ;; *************** function _putch *****************
  1307 ;; Defined at:
  1308 ;;		line 7 in file "C:\Compiler\Microchip\pic\sources\c99\common\putch.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  c               1    wreg     unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  c               1    0[COMMON] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_fputc
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _putch
  1337  067B                     _putch:
  1338  067B                     l609:	
  1339                           ;incstack = 0
  1340                           ; Regs used in _putch: [wreg]
  1341                           
  1342  067B  0008               	return
  1343  067C                     __end_of_putch:
  1344  007E                     btemp	set	126	;btemp
  1345  007E                     wtemp0	set	126
  1346                           
  1347                           	psect	config
  1348                           
  1349                           ;Config register CONFIG1 @ 0x8007
  1350                           ;	Oscillator Selection Bits
  1351                           ;	FOSC = ECH, ECH, External Clock, High Power Mode (4-20 MHz): device clock supplied to 
      +                          CLKIN pins
  1352                           ;	Watchdog Timer Enable
  1353                           ;	WDTE = ON, WDT enabled
  1354                           ;	Power-up Timer Enable
  1355                           ;	PWRTE = OFF, PWRT disabled
  1356                           ;	MCLR Pin Function Select
  1357                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1358                           ;	Flash Program Memory Code Protection
  1359                           ;	CP = OFF, Program memory code protection is disabled
  1360                           ;	Brown-out Reset Enable
  1361                           ;	BOREN = ON, Brown-out Reset enabled
  1362                           ;	Clock Out Enable
  1363                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1364                           ;	Internal/External Switchover Mode
  1365                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1366                           ;	Fail-Safe Clock Monitor Enable
  1367                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1368  8007                     	org	32775
  1369  8007  3FFF               	dw	16383
  1370                           
  1371                           ;Config register CONFIG2 @ 0x8008
  1372                           ;	Flash Memory Self-Write Protection
  1373                           ;	WRT = OFF, Write protection off
  1374                           ;	Peripheral Pin Select one-way control
  1375                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  1376                           ;	Zero-cross detect disable
  1377                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR and can be enabled with ZCDS
      +                          EN bit.
  1378                           ;	Phase Lock Loop enable
  1379                           ;	PLLEN = ON, 4x PLL is always enabled
  1380                           ;	Stack Overflow/Underflow Reset Enable
  1381                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1382                           ;	Brown-out Reset Voltage Selection
  1383                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1384                           ;	Low-Power Brown Out Reset
  1385                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1386                           ;	Low-Voltage Programming Enable
  1387                           ;	LVP = ON, Low-voltage programming enabled
  1388  8008                     	org	32776
  1389  8008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      54
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S365_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    testPort@Port	PTR int  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    testPort@trisPort	PTR int  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2507
                             _printf
                           _testPort
 ---------------------------------------------------------------------------------
 (1) _testPort                                            13     3     10     939
                                              0 COMMON    13     3     10
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1568
                                             10 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1440
                                             11 COMMON     3     0      3
                                              5 BANK0      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1116
                                              8 COMMON     3     1      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     716
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
   _testPort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      36       5       67.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      44      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      44      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Aug 06 19:35:59 2021

                      l7 0769                       l10 077A                       l16 06F5  
        testPort@counter 0078                      l701 06F7                      l711 072D  
                    l703 06FC                      l609 067B                      l705 0701  
                    l721 079A                      l707 0706                      l723 079E  
                    l715 077C                      l547 0693                      l580 07F4  
                    l709 0710                      l741 07EB                      l725 07AF  
                    l733 07C7                      l717 078E                      l735 07CF  
                    l727 07B7                      l719 0796                      l751 069D  
                    l729 07C2                      l753 06AE                      l761 0746  
                    l586 06BB                      l739 07D2                      l755 06B7  
                    l747 0696                      l763 0749                      l749 069A  
                    l773 0682                      l765 0751                      l781 06D8  
                    l598 0735                      l775 0687                      l767 0759  
                    l759 0736                      l783 06E0                      l769 0776  
                    l779 06BC                      u110 06FC                      u111 06FB  
                    u120 0701                      u200 06D8                      u121 0700  
                    u201 06D7                      u130 0710                      u131 070F  
                    u140 072D                      u141 072C                      u150 078E  
                    u151 078D                      u160 07AF                      u145 0729  
                    u161 07AE                      u217 0754                      u170 06B7  
                    u171 06B6                      u190 0776                      u191 0775  
                    u185 0761                      u195 0772                      wreg 0009  
                   STR_1 0800                     _dbuf 0020                     _main 06BC  
                   _prec 0044                     _nout 0040                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0002        testPort@direction 0074         testPort@trisPort 0070  
                  ?_main 0070             vfpfcnvrt@fmt 0078                    _flags 0046  
                  _fputc 06F7                    _width 0042                    _putch 067B  
                  status 0003                    wtemp0 007E       testPort@direction2 0076  
        __initialization 07F5             __end_of_main 06F7                   ??_main 007E  
                 ?_fputc 0070                   ?_putch 0070             vfprintf@cfmt 0050  
                 _printf 0682                   fputc@c 0070         __end_of_testPort 077B  
                 putch@c 0070         __end_of_vfprintf 06BC  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_fputc 0736            __end_of_putch 067C  
                ??_fputc 0073                  ??_putch 0070               __pbssBANK0 0020  
             __pmaintext 06BC                  ?_printf 0052       __size_of_vfpfcnvrt 007A  
              ?_testPort 0070                ?_vfprintf 007B                  __ptext1 0736  
                __ptext2 0682                  __ptext3 0694                  __ptext4 077B  
                __ptext5 06F7                  __ptext6 067B          __size_of_printf 0012  
                clrloop0 067D     end_of_initialization 07FD                  fputc@fp 0072  
      __end_of_vfpfcnvrt 07F5               ??_testPort 007A               ??_vfprintf 004D  
            vfpfcnvrt@ap 0079              vfpfcnvrt@fp 007A           __end_of_printf 0694  
    start_initialization 07F5              vfprintf@fmt 007B                 ??_printf 0054  
              ___latbits 0003            __pcstackBANK0 0048        __size_of_testPort 0045  
      __size_of_vfprintf 0028           __size_of_fputc 003F           __size_of_putch 0001  
              clear_ram0 067C                _vfpfcnvrt 077B               vfprintf@ap 007D  
             vfprintf@fp 004F               ?_vfpfcnvrt 0078            __size_of_main 003B  
               _testPort 0736                testPort@i 007B                 _vfprintf 0694  
              printf@fmt 0052                 printf@ap 0055              ??_vfpfcnvrt 0048  
          __pstringtext1 0800            __pstringtext2 0000             testPort@Port 0072  
